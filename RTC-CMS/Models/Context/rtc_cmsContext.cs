// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using RTC_CMS.Models;

namespace RTC_CMS.Models.Context;

public partial class rtc_cmsContext : DbContext
{
    public rtc_cmsContext(DbContextOptions<rtc_cmsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Areas> Areas { get; set; }

    public virtual DbSet<ErrorHistories> ErrorHistories { get; set; }

    public virtual DbSet<MachineErrors> MachineErrors { get; set; }

    public virtual DbSet<MachineItems> MachineItems { get; set; }

    public virtual DbSet<Machines> Machines { get; set; }

    public virtual DbSet<OperateHistories> OperateHistories { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Areas>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("areas");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaCode).HasMaxLength(45);
            entity.Property(e => e.AreaName).HasMaxLength(45);
        });

        modelBuilder.Entity<ErrorHistories>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("error_histories");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ErrorDate).HasColumnType("datetime");
            entity.Property(e => e.MachineErrorId).HasColumnName("MachineErrorID");
            entity.Property(e => e.MachineId).HasColumnName("MachineID");
        });

        modelBuilder.Entity<MachineErrors>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("machine_errors");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MachineErrorCode).HasMaxLength(45);
            entity.Property(e => e.MachineErrorName).HasMaxLength(145);
        });

        modelBuilder.Entity<MachineItems>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("machine_items");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MachineId).HasColumnName("MachineID");
            entity.Property(e => e.MachineItemCode).HasMaxLength(45);
            entity.Property(e => e.MachineItemName).HasMaxLength(145);
            entity.Property(e => e.MachineItemType).HasComment("1: Động cơ\n2: .....");
            entity.Property(e => e.OperateThreshold).HasPrecision(18, 2);
        });

        modelBuilder.Entity<Machines>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("machines");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaId).HasColumnName("AreaID");
            entity.Property(e => e.MachineCode).HasMaxLength(45);
            entity.Property(e => e.MachineName).HasMaxLength(145);
            entity.Property(e => e.OperateThreshold).HasPrecision(18, 2);
        });

        modelBuilder.Entity<OperateHistories>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("operate_histories");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MachineItemId).HasColumnName("MachineItemID");
            entity.Property(e => e.RecordedAt).HasColumnType("datetime");
            entity.Property(e => e.SpeedValue).HasPrecision(18, 2);
            entity.Property(e => e.Status).HasComment("1: Chạy,2: Dừng,3: Lỗi");
            entity.Property(e => e.TemperatureValue).HasPrecision(18, 2);
            entity.Property(e => e.VibrationValue).HasPrecision(18, 2);
        });

        modelBuilder.Entity<Roles>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("roles");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.RoleCode).HasMaxLength(45);
            entity.Property(e => e.RoleName).HasMaxLength(45);
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("users");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FullName).HasMaxLength(145);
            entity.Property(e => e.Password).HasMaxLength(145);
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.UserName).HasMaxLength(145);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}